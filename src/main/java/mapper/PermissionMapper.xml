<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="model.Permission" >
    <id column="permission_id" property="permissionId" jdbcType="INTEGER" />
    <result column="permission_name" property="permissionName" jdbcType="VARCHAR" />
    <result column="permission_type" property="permissionType" jdbcType="TINYINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="percode" property="percode" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="pids" property="pids" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="deep" property="deep" jdbcType="INTEGER" />
    <result column="permission_state" property="permissionState" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    permission_id, permission_name, permission_type, url, percode, pid, pids, sort, icon, 
    deep, permission_state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.PermissionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from permission
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from permission
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.PermissionExample" >
    delete from permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Permission" >
    insert into permission (permission_id, permission_name, permission_type, 
      url, percode, pid, 
      pids, sort, icon, deep, 
      permission_state)
    values (#{permissionId,jdbcType=INTEGER}, #{permissionName,jdbcType=VARCHAR}, #{permissionType,jdbcType=TINYINT}, 
      #{url,jdbcType=VARCHAR}, #{percode,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, 
      #{pids,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR}, #{deep,jdbcType=INTEGER}, 
      #{permissionState,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.Permission" >
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="permissionName != null" >
        permission_name,
      </if>
      <if test="permissionType != null" >
        permission_type,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="percode != null" >
        percode,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="pids != null" >
        pids,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="deep != null" >
        deep,
      </if>
      <if test="permissionState != null" >
        permission_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="permissionName != null" >
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="permissionType != null" >
        #{permissionType,jdbcType=TINYINT},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="percode != null" >
        #{percode,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pids != null" >
        #{pids,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="deep != null" >
        #{deep,jdbcType=INTEGER},
      </if>
      <if test="permissionState != null" >
        #{permissionState,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.PermissionExample" resultType="java.lang.Integer" >
    select count(*) from permission
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update permission
    <set >
      <if test="record.permissionId != null" >
        permission_id = #{record.permissionId,jdbcType=INTEGER},
      </if>
      <if test="record.permissionName != null" >
        permission_name = #{record.permissionName,jdbcType=VARCHAR},
      </if>
      <if test="record.permissionType != null" >
        permission_type = #{record.permissionType,jdbcType=TINYINT},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.percode != null" >
        percode = #{record.percode,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pids != null" >
        pids = #{record.pids,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.deep != null" >
        deep = #{record.deep,jdbcType=INTEGER},
      </if>
      <if test="record.permissionState != null" >
        permission_state = #{record.permissionState,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update permission
    set permission_id = #{record.permissionId,jdbcType=INTEGER},
      permission_name = #{record.permissionName,jdbcType=VARCHAR},
      permission_type = #{record.permissionType,jdbcType=TINYINT},
      url = #{record.url,jdbcType=VARCHAR},
      percode = #{record.percode,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      pids = #{record.pids,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      icon = #{record.icon,jdbcType=VARCHAR},
      deep = #{record.deep,jdbcType=INTEGER},
      permission_state = #{record.permissionState,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Permission" >
    update permission
    <set >
      <if test="permissionName != null" >
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="permissionType != null" >
        permission_type = #{permissionType,jdbcType=TINYINT},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="percode != null" >
        percode = #{percode,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="pids != null" >
        pids = #{pids,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="deep != null" >
        deep = #{deep,jdbcType=INTEGER},
      </if>
      <if test="permissionState != null" >
        permission_state = #{permissionState,jdbcType=CHAR},
      </if>
    </set>
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Permission" >
    update permission
    set permission_name = #{permissionName,jdbcType=VARCHAR},
      permission_type = #{permissionType,jdbcType=TINYINT},
      url = #{url,jdbcType=VARCHAR},
      percode = #{percode,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      pids = #{pids,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      deep = #{deep,jdbcType=INTEGER},
      permission_state = #{permissionState,jdbcType=CHAR}
    where permission_id = #{permissionId,jdbcType=INTEGER}
  </update>
</mapper>